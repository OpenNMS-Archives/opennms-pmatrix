<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.opennms</groupId>
    <artifactId>opennms-pmatrix</artifactId>
    <version>1.2.0-SNAPSHOT</version>
  </parent>

  <artifactId>vaadin-pmatrix-war</artifactId>
  <packaging>war</packaging>
  <name>vaadin-pmatrix-war</name>
  <url>http://opennms.org</url>
  <description>Stand Alone Vaadin War of Pmatrix Real time performance statistics matrix display for OpenNMS.</description>

  <profiles>
    <profile>
      <id>compile-widgetset</id>

      <build>
        <plugins>
          <!-- As we are doing "inplace" GWT compilation, ensure the widgetset -->
          <!-- directory is cleaned properly -->
          <plugin>
            <artifactId>maven-clean-plugin</artifactId>
            <configuration>
              <filesets>
                <fileset>
                  <directory>src/main/webapp/VAADIN/widgetsets</directory>
                </fileset>
              </filesets>
            </configuration>
          </plugin>

          <plugin>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-maven-plugin</artifactId>
            <configuration>
              <extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
              <!-- <runTarget>mobilemail</runTarget> -->
              <!-- We are doing "inplace" but into subdir VAADIN/widgetsets. This way compatible with Vaadin eclipse plugin. -->
              <webappDirectory>${basedir}/src/main/webapp/VAADIN/widgetsets</webappDirectory>
              <hostedWebapp>${basedir}/src/main/webapp/VAADIN/widgetsets</hostedWebapp>
              <noServer>true</noServer>
              <!-- Remove draftCompile when project is ready -->
              <draftCompile>false</draftCompile>
              <compileReport>true</compileReport>
              <style>OBF</style>
              <strict>true</strict>
              <runTarget>http://localhost:8080/</runTarget>
            </configuration>
            <executions>
              <execution>
                <configuration>
                  <!-- if you don't specify any modules, the plugin will find them -->
                  <!-- <modules> <module>com.vaadin.demo.mobilemail.gwt.ColorPickerWidgetSet</module> </modules> -->
                </configuration>
                <goals>
                  <goal>clean</goal>
                  <goal>resources</goal>
                  <goal>update-theme</goal>
                  <goal>update-widgetset</goal>
                  <goal>compile-theme</goal>
                  <goal>compile</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
          <warSourceExcludes>**/.gitignore</warSourceExcludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <configuration>
          <jettyConfig>jetty-jmx.xml</jettyConfig>
          <scanIntervalSeconds>2</scanIntervalSeconds>
          <webApp>
            <contextPath>/vaadin-pmatrix</contextPath>
          </webApp>
          <systemProperties>
            <systemProperty>
              <name>log4j.configurationFile</name>
              <value>file:///${basedir}/src/main/webapp/WEB-INF/log4j2.xml</value>
            </systemProperty>
            <!-- <systemProperty> -->
            <!-- <name>log4j.configuration</name> -->
            <!-- have to use file:/// url since -->
            <!-- Jetty is using classloader -->
            <!-- before the webapp classloader is ready -->
            <!-- <value>file:///${basedir}/src/main/webapp/WEB-INF/log4j.properties</value> -->
            <!-- </systemProperty> -->
            <systemProperty>
              <name>org.eclipse.jetty.util.log.class</name>
              <value>org.eclipse.jetty.util.log.Slf4jLog</value>
            </systemProperty>
          </systemProperties>
          <!-- for mvn jetty:run-forked -->
          <!-- <jvmArgs> -Xmx1024m </jvmArgs> -->
          <!-- <stopPort>8087</stopPort> -->
          <!-- <stopKey>foo</stopKey> -->
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j2Version}</version>
          </dependency>
          <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j2Version}</version>
          </dependency>
          <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j2Version}</version>
          </dependency>

        </dependencies>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>jaxb2-maven-plugin</artifactId>
        <version>1.5</version>
        <executions>
          <execution>
            <goals>
              <goal>schemagen</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <verbose>true</verbose>
              <includes>
                <include>org/opennms/features/vaadin/pmatrix/model/*.java</include>

              </includes>
              <outputDirectory>${project.build.directory}/xsds</outputDirectory>
              <!-- doesnt appear to work with package-info.java annotations -->
              <!-- see http://stackoverflow.com/questions/5058236/schemagen-ant-task-ignores-package-info-java -->
              <!-- <transformSchema> -->
              <!-- <uri>http://xmlns.opennms.org/xsd/config/pmatrix</uri> -->
              <!-- <toPrefix>pmatrix</toPrefix> -->
              <!-- <toFile>pmatrixconfig</toFile> -->
              <!-- </transformSchema> -->
            </configuration>
          </execution>
        </executions>
      </plugin>



      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <id>copy-jaxb.index</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/classes/org/opennms/features/vaadin/pmatrix/model/</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/src/main/java/org/opennms/features/vaadin/pmatrix/model/</directory>
                  <includes>
                    <include>jaxb.index</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy2-jaxb.index</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/classes/org/opennms/features/vaadin/pmatrix/calculator/</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/src/main/java/org/opennms/features/vaadin/pmatrix/calculator/</directory>
                  <includes>
                    <include>jaxb.index</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>

          <execution>
            <id>copy-xsds</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/${project.name}-${project.version}/META-INF/schema</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.build.directory}/xsds</directory>
                  <includes>
                    <include>**/*.xsd</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>


      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.plugin.version}</version>
        <configuration>
          <excludes>
            <!-- prevent tests running in this package. These are one off development tests -->
            <exclude>**/org/opennms/features/vaadin/pmatrix/manual/*.java</exclude>
          </excludes>
        </configuration>
      </plugin>
    </plugins>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
      </testResource>
    </testResources>

  </build>


  <dependencies>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>vaadin-pmatrix</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-server</artifactId>
      <version>${vaadinVersion}</version>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-client-compiled</artifactId>
      <version>${vaadinVersion}</version>
    </dependency>

    <!-- Needed when using the widgetset optimizer (custom ConnectorBundleLoaderFactory). -->
    <!-- For widgetset compilation, vaadin-client-compiler is automatically added on the -->
    <!-- compilation classpath by vaadin-maven-plugin so normally there is no need for an explicit dependency. -->
    <!-- <dependency> -->
    <!-- <groupId>com.vaadin</groupId> -->
    <!-- <artifactId>vaadin-client-compiler</artifactId> -->
    <!-- <version>${vaadinVersion}</version> -->
    <!-- <scope>provided</scope> -->
    <!-- </dependency> -->

    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-client</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-push</artifactId>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-themes</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>ru.xpoft.vaadin</groupId>
      <artifactId>spring-vaadin-integration</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>compile</scope> <!-- test ?? -->
    </dependency>

    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-rrd-tcp</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4jVersion}</version>
      <scope>compile</scope>
    </dependency>
    <!-- <dependency> -->
    <!-- <groupId>org.slf4j</groupId> -->
    <!-- <artifactId>slf4j-simple</artifactId> -->
    <!-- <version>${slf4jVersion}</version> -->
    <!-- <scope>compile</scope> -->
    <!-- </dependency> -->

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${log4j2Version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4j2Version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <version>${log4j2Version}</version>
      <scope>compile</scope>
    </dependency>


  </dependencies>

</project>
